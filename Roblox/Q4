You are given operations, an array containing the following two types of operations:

[0, a, b] - Create and save a rectangle of size a × b;
[1, a, b] - Answer the question: "Could a box of size a × b fit inside of each of the earlier saved rectangles?". It is possible to rotate the rectangles by 90 degrees; ie: a rectangle of dimensions a × b can be rotated so that its dimensions are b × a.
Your task is to return an array of booleans, representing the answers to the second type of operation, in the order they appear.

Note that the operations should proceed iteratively, so when operations[i] is executed, only the results of the previous operations 0, 1, ..., i - 1 are available.

Example

For operations = [[1, 1, 1]], the output should be solution(operations) = [true].

There are no rectangles, so return true because there were no rectangles that the box was unable to fit inside.

For operations = [[0, 3, 3], [0, 5, 2], [1, 3, 2], [1, 2, 4]], the output should be solution(operations) = [true, false].

Expand to see the example video.
1.00

Note: If you are not able to see the video, use this link to access it.

A 3 × 3 rectangle is added;
A 5 × 2 rectangle is added;
We need to check if it's possible to store a box of a size 3 × 2 inside of each of the rectangles from operations 1 and 2.
A box of a size 3 × 2 can be stored in the 3 × 3 rectangle as-is.
A box of a size 3 × 2 can be stored in the 5 × 2 rectangle as-is.
The box fits inside of both rectangles, so add true to the result.
We need to check if it's possible to store a box of a size 2 × 4 inside of each of the rectangles from operations 1 and 2.
A box of a size 2 × 4 will not fit in the 3 × 3 rectangle, even if it's rotated.
A box of a size 2 × 4 can be stored in the 5 × 2 rectangle after it's been rotated.
The box could not be stored in all of the rectangles, so add false to the result.
So the final answer is [true, false].

Input/Output

[execution time limit] 4 seconds (py3)

[input] array.array.integer operations

An array of operations in the format described above.

Guaranteed constraints:
1 ≤ operations.length ≤ 105,
operations[i].length = 3,
operations[i][0] is either 0 or 1,
1 ≤ operations[i][1] ≤ 105,
1 ≤ operations[i][2] ≤ 105.

[output] array.boolean

An array of booleans, where true means that for the request [1, a, b] it is possible to store a box of size a × b in all of the previous rectangles, and false means the opposite.

[Python 3] Syntax Tips

# Prints help message to the console
# Returns a string
def helloWorld(name):
    print("This prints to the console when you Run Tests")
    return "Hello, " + name
